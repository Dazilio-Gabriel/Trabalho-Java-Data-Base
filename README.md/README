# üì¶ Sistema de Controle de Estoque

## üë• Integrantes do Grupo

- Gabriel Dazilio
- Victor Castro

## üë®‚Äçüè´ Disciplina e Professor

- **Disciplina:** Banco de Dados
- **Professor:** Howard Roatti

## üìù Descri√ß√£o do Projeto

Este projeto consiste no desenvolvimento de uma aplica√ß√£o de console em **Java** para simular um sistema de controle de estoque. O sistema permite o gerenciamento de **produtos** e suas respectivas **movimenta√ß√µes** (entradas e sa√≠das), interagindo diretamente com um banco de dados **MySQL**. A comunica√ß√£o com o banco de dados √© realizada utilizando **JDBC puro**, sem o aux√≠lio de frameworks ORM, conforme especificado nos requisitos. O objetivo √© aplicar os conceitos de modelagem relacional, linguagem SQL e integra√ß√£o entre aplica√ß√£o e banco de dados.

## ‚ú® Funcionalidades Implementadas

O sistema oferece as seguintes funcionalidades atrav√©s de um menu interativo no console:

- **üìä Relat√≥rios:**
  - Listagem de todas as movimenta√ß√µes registradas (n√£o exclu√≠das logicamente), exibindo detalhes do produto associado (Nome e ID). (Consulta com Jun√ß√£o impl√≠cita via DAO).
  - Relat√≥rio de total de itens movimentados, agrupado por tipo (ENTRADA/SAIDA). (Consulta com Agrupamento/Sumariza√ß√£o).
- **‚ûï Inserir Registro:**
  - Sub-menu para escolher entre inserir **Produto** ou **Movimenta√ß√£o**.
  - Cadastro de novos **Produtos** (nome, descri√ß√£o, estoque inicial).
  - Cadastro de novas **Movimenta√ß√µes** (associando a um produto existente, tipo, quantidade), com atualiza√ß√£o autom√°tica do estoque do produto.
  - Loop opcional para inserir m√∫ltiplos registros ("Deseja continuar?").
- **‚ûñ Remover Registro:**
  - Sub-menu para escolher entre remover **Produto** ou **Movimenta√ß√£o**.
  - Listagem dos registros existentes (ID e Nome/Tipo) para sele√ß√£o.
  - Implementa√ß√£o de **"soft delete"** (atualiza o campo `sr_deleted` para 'T') em vez de exclus√£o f√≠sica.
  - Verifica√ß√£o de chave estrangeira: impede a remo√ß√£o de um **Produto** se ele possuir movimenta√ß√µes associadas.
  - Confirma√ß√£o do usu√°rio ("Tem certeza? S/N") antes de efetivar a remo√ß√£o.
  - Loop opcional para remover m√∫ltiplos registros ("Deseja continuar?").
- **üîÑ Atualizar Registro:**
  - Sub-menu para escolher entre atualizar **Produto** ou **Movimenta√ß√£o**.
  - Listagem dos registros existentes (ID e Nome/Tipo) para sele√ß√£o.
  - Permite a altera√ß√£o dos dados de **Produtos** (nome, descri√ß√£o, estoque).
  - Permite a altera√ß√£o dos dados de **Movimenta√ß√µes** (produto associado, tipo, quantidade).
  - Exibi√ß√£o do registro com os dados atualizados ap√≥s a opera√ß√£o.
  - Loop opcional para atualizar m√∫ltiplos registros ("Deseja continuar?").
- **üñ•Ô∏è Splash Screen:** Exibi√ß√£o inicial com nome do sistema, integrantes e contagem atual de registros nas tabelas `produtos` e `movimentacao`.

## üõ†Ô∏è Tecnologias Utilizadas

- **Linguagem:** Java (JDK 17+)
- **Banco de Dados:** MySQL 8.0+
- **Conectividade:** JDBC (via MySQL Connector/J 9.4.0)
- **Controle de Vers√£o:** Git / GitHub
- **IDE:** IntelliJ IDEA

## üìÅ Estrutura do Projeto

O projeto segue uma estrutura de pacotes para organizar as responsabilidades:
