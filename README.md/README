# Sistema de Controle de Estoque

## Integrantes do Grupo

- Gabriel Dazilio
- Victor Castro

## Disciplina e Professor

- [cite_start]**Disciplina:** Banco de Dados [cite: 2, 87]
- [cite_start]**Professor:** Howard Roatti [cite: 3, 87]

## Descrição do Projeto

Este projeto consiste no desenvolvimento de uma aplicação de console em Java para simular um sistema de controle de estoque. [cite_start]O sistema permite o gerenciamento de produtos e suas respectivas movimentações (entradas e saídas), interagindo diretamente com um banco de dados MySQL[cite: 1, 18]. [cite_start]A comunicação com o banco de dados é realizada utilizando JDBC puro, sem o auxílio de frameworks ORM, conforme especificado nos requisitos[cite: 123, 124]. O objetivo é aplicar os conceitos de modelagem relacional, linguagem SQL e integração entre aplicação e banco de dados.

## Funcionalidades Implementadas

[cite_start]O sistema oferece as seguintes funcionalidades através de um menu interativo no console[cite: 19]:

- [cite_start]**Relatórios:** [cite: 20]
  - [cite_start]Listagem de todas as movimentações registradas (não excluídas logicamente), exibindo detalhes do produto associado (Nome e ID)[cite: 42]. (Consulta com Junção implícita via DAO).
  - [cite_start]Relatório de total de itens movimentados, agrupado por tipo (ENTRADA/SAIDA)[cite: 40]. (Consulta com Agrupamento/Sumarização).
- [cite_start]**Inserir Registro:** [cite: 21]
  - [cite_start]Sub-menu para escolher entre inserir Produto ou Movimentação[cite: 45].
  - [cite_start]Cadastro de novos Produtos (nome, descrição, estoque inicial)[cite: 47].
  - [cite_start]Cadastro de novas Movimentações (associando a um produto existente, tipo, quantidade), com atualização automática do estoque do produto[cite: 47, 48].
  - [cite_start]Loop opcional para inserir múltiplos registros[cite: 49].
- [cite_start]**Remover Registro:** [cite: 22]
  - [cite_start]Sub-menu para escolher entre remover Produto ou Movimentação[cite: 52].
  - [cite_start]Listagem dos registros existentes (ID e Nome/Tipo) para seleção[cite: 54].
  - Implementação de "soft delete" (atualiza o campo `sr_deleted` para 'T') em vez de exclusão física.
  - [cite_start]Verificação de chave estrangeira: impede a remoção de um Produto se ele possuir movimentações associadas[cite: 58].
  - [cite_start]Confirmação do usuário ("Tem certeza? S/N") antes de efetivar a remoção[cite: 56].
  - [cite_start]Loop opcional para remover múltiplos registros[cite: 59].
- [cite_start]**Atualizar Registro:** [cite: 23]
  - [cite_start]Sub-menu para escolher entre atualizar Produto ou Movimentação[cite: 64].
  - [cite_start]Listagem dos registros existentes (ID e Nome/Tipo) para seleção[cite: 66].
  - [cite_start]Permite a alteração dos dados de Produtos (nome, descrição, estoque)[cite: 69].
  - [cite_start]Permite a alteração dos dados de Movimentações (produto associado, tipo, quantidade)[cite: 69].
  - [cite_start]Exibição do registro com os dados atualizados após a operação[cite: 72].
  - [cite_start]Loop opcional para atualizar múltiplos registros[cite: 73].
- [cite_start]**Splash Screen:** Exibição inicial com nome do sistema, integrantes e contagem atual de registros nas tabelas `produtos` e `movimentacao`[cite: 27, 28].

## Tecnologias Utilizadas

- **Linguagem:** Java (JDK 17+)
- [cite_start]**Banco de Dados:** MySQL 8.0+ [cite: 17, 92]
- [cite_start]**Conectividade:** JDBC (via MySQL Connector/J 9.4.0) [cite: 123]
- **Controle de Versão:** Git / GitHub
- **IDE:** IntelliJ IDEA

## Estrutura do Projeto

O projeto segue uma estrutura de pacotes para organizar as responsabilidades:
